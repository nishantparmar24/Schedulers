# -*- coding: utf-8 -*-
"""DataResorceCleaner.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FfYv4Vz7fIUcXHFTs3d8OMW1d4kNYYG2
"""

from google.colab import drive
import os
import pandas as pd
import re

drive.mount("/gdrive")

input_directory = "/gdrive/My Drive/Political Risk Project/Test Data"
file_prefix = "Data-Collection-"
date_prefix = "2019-11-28"
version_pfx = "-v1"
file_ext = ".csv"

file_name = "{}{}{}{}".format(file_prefix, date_prefix, version_pfx, file_ext)
file_path = os.path.join(input_directory, "it-it", file_name)
input_file = pd.read_csv(file_path, encoding="utf-8")
# os.listdir(os.path.join(input_directory))

input_file

exclusion_keywords = ["([bB]ritain)", "(uk)", "([bB]rexit)", "(\.|-uk)",
                      "([uU]nited [kK]ingdom)", "([usa|USA])", 
                      "([uU]nited [sS]tates)", 
                      "([uU]nited [sS]tates of [aA]merica)", "([aA]merica)", 
                      "([jJ]ohnson)", "([tT]rump)", "([bB]oris)", "([dD]onald)",
                      "(u-k)", "(u-s)", "(u-s-a)"]

inclusion_keywords = [r".*(\.it).*", r".*(ital[y|i.*]).*"]

"""
exclusion_keywords = ["[bB]ritain", "uk", "[bB]rexit", "\.|-uk",
                      "[uU]nited [kK]ingdom", "[usa|USA]", 
                      "[uU]nited [sS]tates", 
                      "[uU]nited [sS]tates of [aA]merica", "[aA]merica", 
                      "[tT]rump", "[bB]oris", "u-k", "u-s", "u-s-a"]
"""

print("|".join(inclusion_keywords))

str_prefix_cleanup = lambda s: re.subn("^=\s*\W+", "", s)[0]

output_file_name = "Italy-Collection-2019-11-28-v3.csv"
output_file_path = os.path.join(input_directory, "it-it", "Italy-collection", 
                                output_file_name)

input_file.dropna(subset=["data"], inplace=True)
prefix_eq_df = input_file[input_file.data.str.contains("^=")]
if prefix_eq_df.shape[0] > 0:
    prefix_eq_df = input_file.data.apply(str_prefix_cleanup)
# str_prefix_cleanup(prefix_with_eq)
prefix_with_eq

targeted_df = input_file[input_file.data.str.contains(
    "|".join(inclusion_keywords))]

targeted_df

if targeted_df.shape[0] < input_file.shape[0] and targeted_df.shape[0] > 0:
    targeted_df.to_csv(output_file_path, index=False)
else:
    print("Target DataFrame seems incorrect. Please check DataFrames again.")

file_name_2 = "{}{}{}{}".format(file_prefix, date_prefix, version_pfx, file_ext)
file_path_2 = os.path.join(input_directory, "en-it", file_name_2)
input_df_2 = pd.read_csv(file_path_2, encoding="utf-8")
input_df_2["rating"] = ""
input_df_2.dropna(subset=["data"], inplace=True)
input_df_2

output_file_name_2 = "Italy-Collection-2019-11-28-v4.csv"
output_file_path_2 = os.path.join(input_directory, "it-it", output_file_name_2)

targeted_df_2 = input_df_2[input_df_2.data.str.contains("|".join(
    inclusion_keywords))]

targeted_df_2

# prefix_eq_df = targeted_df_2[targeted_df_2.data.str.contains("^=")]
# if prefix_eq_df.shape[0] > 0:
#     targeted_df_2 = prefix_eq_df.data.apply(str_prefix_cleanup)

if targeted_df_2.shape[0] < input_file.shape[0] and targeted_df_2.shape[0] > 0:
    targeted_df_2.to_csv(output_file_path_2, index=False)
else:
    print("Target DataFrame seems incorrect. Please check DataFrames again.")